- name: Install required packages
  apt:
    name:
      - rsnapshot
      - patch

- name: Patch rsnapshot to report rsync errors (1)
  patch:
    src: show_rsync_errors_1.patch
    dest: /usr/bin/rsnapshot

- name: Patch rsnapshot to report rsync errors (2)
  patch:
    src: show_rsync_errors_2.patch
    dest: /usr/bin/rsnapshot

- name: Ensure backupuser exists
  user: name=backuppuller generate_ssh_key=yes

- name: Install backupuser ssh config
  template:
    src: ssh_config
    dest: /home/backuppuller/.ssh/config
    owner: backuppuller
    group: backuppuller
    mode: "0600"

- name: Create /etc/rsnapshot directory
  file: path=/etc/rsnapshot state=directory

- name: Generate rsnapshot.conf files
  template:
    src: rsnapshot.conf
    dest: /etc/rsnapshot/rsnapshot-{{ item.name }}.conf
    validate: 'rsnapshot -c %s configtest'
  when: item.enabled|default(True)
  with_items: "{{ rsnapshot_backups }}"

- name: Install functions.sh script
  template:
    src: functions.sh
    dest: /etc/rsnapshot/functions.sh
    mode: 0700

- name: Generate rsnapshot-rotate.sh scripts
  template:
    src: rsnapshot-rotate.sh
    dest: /etc/rsnapshot/rsnapshot-rotate-{{ backup.name }}.sh
    mode: 0700
  when: backup.enabled|default(True)
  loop: "{{ rsnapshot_backups }}"
  loop_control:
    loop_var: backup

- name: Add rsnapshot-run.sh script
  template:
    src: rsnapshot-run.sh
    dest: /etc/rsnapshot/rsnapshot-run.sh
    mode: 0700

- name: Add rsnapshot-rotate.sh script
  template:
    src: rsnapshot-rotate-all.sh
    dest: /etc/rsnapshot/rsnapshot-rotate.sh
    mode: 0700

- name: Create rsnapshot cronjob (if enabled in config)
  template: src=cronjob dest=/etc/cron.d/rsnapshot-pull
  when: rsnapshot_enable_cron

- name: Remove rsnapshot cronjob (if disabled in config)
  file: path=/etc/cron.d/rsnapshot-pull state=absent
  when: not rsnapshot_enable_cron

- name: Ensure known_hosts exists and has correct permissions
  file:
    path: /home/backuppuller/.ssh/known_hosts
    owner: backuppuller
    group: backuppuller
    state: file

- name: Check that ssh to hosts works
  shell: ssh -o ConnectTimeout=1 {{ item.ssh_args|default(rsnapshot_ssh_args) }} {{ item.backup_host }} test
  become_user: backuppuller
  with_items: "{{ rsnapshot_backups }}"
  when: item.backup_host is defined and item.enabled|default(True) and testing is not defined
  changed_when: False
  ignore_errors: yes

- name: Setup logrotation
  template: src=logrotate dest=/etc/logrotate.d/rsnapshot
